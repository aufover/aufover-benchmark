Error: COMPILER_WARNING (CWE-563):
libcomps-0.1.18/libcomps/src/comps_parse.c: scope_hint: In function 'comps_parse_start_doctype'
libcomps-0.1.18/libcomps/src/comps_parse.c:133:36: warning[-Wunused-parameter]: unused parameter 'standalone'
#  133 |                                int standalone) {
#      |                                ~~~~^~~~~~~~~~
libcomps-0.1.18/libcomps/src/comps_parse.c: scope_hint: At top level
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  131|                                  const XML_Char *sysid,
#  132|                                  const XML_Char *pubid,
#  133|->                                int standalone) {
#  134|       #define parsed ((COMPS_Parsed*)userData)
#  135|       parsed->doctype_name = comps_str(doctypeName);

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:765:22: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  765 |     {"groups_match", (PyCFunction)PyCOMPS_groups_match, METH_VARARGS | METH_KEYWORDS,
#      |                      ^
#  763|   
#  764|   static PyMethodDef PyCOMPS_methods[] = {
#  765|->     {"groups_match", (PyCFunction)PyCOMPS_groups_match, METH_VARARGS | METH_KEYWORDS,
#  766|       PyCOMPS_validate__doc__},
#  767|       {"categories_match", (PyCFunction)PyCOMPS_categories_match, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:767:26: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  767 |     {"categories_match", (PyCFunction)PyCOMPS_categories_match, METH_VARARGS | METH_KEYWORDS,
#      |                          ^
#  765|       {"groups_match", (PyCFunction)PyCOMPS_groups_match, METH_VARARGS | METH_KEYWORDS,
#  766|       PyCOMPS_validate__doc__},
#  767|->     {"categories_match", (PyCFunction)PyCOMPS_categories_match, METH_VARARGS | METH_KEYWORDS,
#  768|       PyCOMPS_validate__doc__},
#  769|       {"environments_match", (PyCFunction)PyCOMPS_envs_match, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:769:28: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  769 |     {"environments_match", (PyCFunction)PyCOMPS_envs_match, METH_VARARGS | METH_KEYWORDS,
#      |                            ^
#  767|       {"categories_match", (PyCFunction)PyCOMPS_categories_match, METH_VARARGS | METH_KEYWORDS,
#  768|       PyCOMPS_validate__doc__},
#  769|->     {"environments_match", (PyCFunction)PyCOMPS_envs_match, METH_VARARGS | METH_KEYWORDS,
#  770|       PyCOMPS_validate__doc__},
#  771|       {"validate", (PyCFunction)PyCOMPS_validate, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:771:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS *)' {aka 'struct _object * (*)(PyCOMPS *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  771 |     {"validate", (PyCFunction)PyCOMPS_validate, METH_NOARGS,
#      |                  ^
#  769|       {"environments_match", (PyCFunction)PyCOMPS_envs_match, METH_VARARGS | METH_KEYWORDS,
#  770|       PyCOMPS_validate__doc__},
#  771|->     {"validate", (PyCFunction)PyCOMPS_validate, METH_NOARGS,
#  772|       PyCOMPS_validate__doc__},
#  773|       {"validate_nf", (PyCFunction)PyCOMPS_validate_nf, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:773:21: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS *)' {aka 'struct _object * (*)(PyCOMPS *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  773 |     {"validate_nf", (PyCFunction)PyCOMPS_validate_nf, METH_NOARGS,
#      |                     ^
#  771|       {"validate", (PyCFunction)PyCOMPS_validate, METH_NOARGS,
#  772|       PyCOMPS_validate__doc__},
#  773|->     {"validate_nf", (PyCFunction)PyCOMPS_validate_nf, METH_NOARGS,
#  774|       PyCOMPS_validate_nf__doc__},
#  775|       {"xml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:775:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  775 |     {"xml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#      |               ^
#  773|       {"validate_nf", (PyCFunction)PyCOMPS_validate_nf, METH_NOARGS,
#  774|       PyCOMPS_validate_nf__doc__},
#  775|->     {"xml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#  776|       PyCOMPS_xml_f__doc__},
#  777|       {"xml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:777:17: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  777 |     {"xml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#      |                 ^
#  775|       {"xml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#  776|       PyCOMPS_xml_f__doc__},
#  777|->     {"xml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#  778|       PyCOMPS_xml_str__doc__},
#  779|       {"toxml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:779:17: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  779 |     {"toxml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#      |                 ^
#  777|       {"xml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#  778|       PyCOMPS_xml_str__doc__},
#  779|->     {"toxml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#  780|       PyCOMPS_toxml_f__doc__},
#  781|       {"toxml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:781:19: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  781 |     {"toxml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#      |                   ^
#  779|       {"toxml_f", (PyCFunction)PyCOMPS_toxml_f, METH_VARARGS | METH_KEYWORDS,
#  780|       PyCOMPS_toxml_f__doc__},
#  781|->     {"toxml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#  782|       PyCOMPS_toxml_str__doc__},
#  783|       {"fromxml_f", (PyCFunction)PyCOMPS_fromxml_f, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:783:19: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  783 |     {"fromxml_f", (PyCFunction)PyCOMPS_fromxml_f, METH_VARARGS | METH_KEYWORDS,
#      |                   ^
#  781|       {"toxml_str", (PyCFunction)PyCOMPS_toxml_str, METH_VARARGS | METH_KEYWORDS,
#  782|       PyCOMPS_toxml_str__doc__},
#  783|->     {"fromxml_f", (PyCFunction)PyCOMPS_fromxml_f, METH_VARARGS | METH_KEYWORDS,
#  784|       PyCOMPS_fromxml_f__doc__},
#  785|       {"fromxml_str", (PyCFunction)PyCOMPS_fromxml_str, METH_VARARGS | METH_KEYWORDS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:785:21: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  785 |     {"fromxml_str", (PyCFunction)PyCOMPS_fromxml_str, METH_VARARGS | METH_KEYWORDS,
#      |                     ^
#  783|       {"fromxml_f", (PyCFunction)PyCOMPS_fromxml_f, METH_VARARGS | METH_KEYWORDS,
#  784|       PyCOMPS_fromxml_f__doc__},
#  785|->     {"fromxml_str", (PyCFunction)PyCOMPS_fromxml_str, METH_VARARGS | METH_KEYWORDS,
#  786|       PyCOMPS_fromxml_str__doc__},
#  787|       {"clear", (PyCFunction)PyCOMPS_clear, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:787:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  787 |     {"clear", (PyCFunction)PyCOMPS_clear, METH_NOARGS,
#      |               ^
#  785|       {"fromxml_str", (PyCFunction)PyCOMPS_fromxml_str, METH_VARARGS | METH_KEYWORDS,
#  786|       PyCOMPS_fromxml_str__doc__},
#  787|->     {"clear", (PyCFunction)PyCOMPS_clear, METH_NOARGS,
#  788|       "Clear Comps"},
#  789|       {"get_last_errors", (PyCFunction)PyCOMPS_get_last_errors,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps.c:968:33: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  968 |     {"get_xml_default_options", (PyCFunction)Libcomps_xml_default, METH_NOARGS,
#      |                                 ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  966|   
#  967|   static PyMethodDef LibcompsMethods[] = {
#  968|->     {"get_xml_default_options", (PyCFunction)Libcomps_xml_default, METH_NOARGS,
#  969|        "Return xml output default options"},
#  970|       {NULL, NULL, 0, NULL}        /* Sentinel */

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_categories.c:202:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS_Category *)' {aka 'struct _object * (*)(PyCOMPS_Category *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  202 |     {"validate", (PyCFunction)PyCOMPSCat_validate, METH_NOARGS,
#      |                  ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  200|   
#  201|   PyMethodDef PyCOMPSCat_methods[] = {
#  202|->     {"validate", (PyCFunction)PyCOMPSCat_validate, METH_NOARGS,
#  203|       "validate inner category structure"},
#  204|       {NULL}  /* Sentinel */

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_dict.c:388:16: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  388 |      {"items", (PyCFunction)PyCOMPSDict_getiteritems, METH_NOARGS,
#      |                ^
#  386|        {"has_key", (PyCFunction)PyCOMPSDict_has_key, METH_O,
#  387|          PyCOMPSDict_has_key__doc__},
#  388|->      {"items", (PyCFunction)PyCOMPSDict_getiteritems, METH_NOARGS,
#  389|        "return iterator returning (key, value) tuple"},
#  390|        {"values", (PyCFunction)PyCOMPSDict_getitervalues, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_dict.c:390:17: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  390 |      {"values", (PyCFunction)PyCOMPSDict_getitervalues, METH_NOARGS,
#      |                 ^
#  388|        {"items", (PyCFunction)PyCOMPSDict_getiteritems, METH_NOARGS,
#  389|        "return iterator returning (key, value) tuple"},
#  390|->      {"values", (PyCFunction)PyCOMPSDict_getitervalues, METH_NOARGS,
#  391|        "return iterator returning item's value"},
#  392|        {"keys", (PyCFunction)PyCOMPSDict_getiter, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_dict.c:392:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  392 |      {"keys", (PyCFunction)PyCOMPSDict_getiter, METH_NOARGS,
#      |               ^
#  390|        {"values", (PyCFunction)PyCOMPSDict_getitervalues, METH_NOARGS,
#  391|        "return iterator returning item's value"},
#  392|->      {"keys", (PyCFunction)PyCOMPSDict_getiter, METH_NOARGS,
#  393|        "return iterator returning item's key"},
#  394|        {"clear", (PyCFunction)PyCOMPSDict_clear, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_dict.c:394:16: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  394 |      {"clear", (PyCFunction)PyCOMPSDict_clear, METH_NOARGS,
#      |                ^
#  392|        {"keys", (PyCFunction)PyCOMPSDict_getiter, METH_NOARGS,
#  393|        "return iterator returning item's key"},
#  394|->      {"clear", (PyCFunction)PyCOMPSDict_clear, METH_NOARGS,
#  395|        "clear the dict"},
#  396|        {"copy", (PyCFunction)PyCOMPSDict_copy, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_dict.c:396:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  396 |      {"copy", (PyCFunction)PyCOMPSDict_copy, METH_NOARGS,
#      |               ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  394|        {"clear", (PyCFunction)PyCOMPSDict_clear, METH_NOARGS,
#  395|        "clear the dict"},
#  396|->      {"copy", (PyCFunction)PyCOMPSDict_copy, METH_NOARGS,
#  397|        "return shallow copy of dict"},
#  398|        {"update", (PyCFunction)PyCOMPSDict_update, METH_O,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_envs.c:168:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS_Env *)' {aka 'struct _object * (*)(PyCOMPS_Env *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  168 |     {"validate", (PyCFunction)PyCOMPSEnv_validate, METH_NOARGS,
#      |                  ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  166|   
#  167|   PyMethodDef PyCOMPSEnv_methods[] = {
#  168|->     {"validate", (PyCFunction)PyCOMPSEnv_validate, METH_NOARGS,
#  169|       PyCOMPS_env_validate__doc__},
#  170|       {NULL}  /* Sentinel */

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_gids.c:200:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS_GID *)' {aka 'struct _object * (*)(PyCOMPS_GID *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  200 |     {"validate", (PyCFunction)PyCOMPSGID_validate, METH_NOARGS,
#      |                  ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  198|   
#  199|   PyMethodDef PyCOMPSGID_methods[] = {
#  200|->     {"validate", (PyCFunction)PyCOMPSGID_validate, METH_NOARGS,
#  201|       "validate inner Group ID structure"},
#  202|       {NULL}  /* Sentinel */

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_groups.c:213:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS_Group *)' {aka 'struct _object * (*)(PyCOMPS_Group *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  213 |     {"validate", (PyCFunction)PyCOMPSGroup_validate, METH_NOARGS,
#      |                  ^
#  211|   
#  212|   PyMethodDef PyCOMPSGroup_methods[] = {
#  213|->     {"validate", (PyCFunction)PyCOMPSGroup_validate, METH_NOARGS,
#  214|        PyCOMPS_group_validate__doc__},
#  215|       {"packages_match", (PyCFunction)PyCOMPSGroup_packages_match,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_groups.c:215:24: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *, PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *, struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  215 |     {"packages_match", (PyCFunction)PyCOMPSGroup_packages_match,
#      |                        ^
#  213|       {"validate", (PyCFunction)PyCOMPSGroup_validate, METH_NOARGS,
#  214|        PyCOMPS_group_validate__doc__},
#  215|->     {"packages_match", (PyCFunction)PyCOMPSGroup_packages_match,
#  216|        METH_VARARGS | METH_KEYWORDS,
#  217|        PyCOMPS_group_packages_match__doc__},

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_groups.c:845:18: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyCOMPS_Package *)' {aka 'struct _object * (*)(PyCOMPS_Package *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  845 |     {"validate", (PyCFunction)PyCOMPSPackage_validate, METH_NOARGS,
#      |                  ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  843|   
#  844|   PyMethodDef PyCOMPSPack_methods[] = {
#  845|->     {"validate", (PyCFunction)PyCOMPSPackage_validate, METH_NOARGS,
#  846|       PyCOMPS_package_validate__doc__},
#  847|       {NULL}  /* Sentinel */

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_mdict.c:408:16: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  408 |      {"items", (PyCFunction)PyCOMPSMDict_getiteritems, METH_NOARGS,
#      |                ^
#  406|        {"has_key", (PyCFunction)PyCOMPSMDict_has_key, METH_O,
#  407|        PyCOMPSMDict_has_key__doc__},
#  408|->      {"items", (PyCFunction)PyCOMPSMDict_getiteritems, METH_NOARGS,
#  409|        "return iterator returning (key, value) tuple"},
#  410|        {"values", (PyCFunction)PyCOMPSMDict_getitervalues, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_mdict.c:410:17: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  410 |      {"values", (PyCFunction)PyCOMPSMDict_getitervalues, METH_NOARGS,
#      |                 ^
#  408|        {"items", (PyCFunction)PyCOMPSMDict_getiteritems, METH_NOARGS,
#  409|        "return iterator returning (key, value) tuple"},
#  410|->      {"values", (PyCFunction)PyCOMPSMDict_getitervalues, METH_NOARGS,
#  411|        "return iterator returning item's value"},
#  412|        {"keys", (PyCFunction)PyCOMPSMDict_getiter, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_mdict.c:412:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  412 |      {"keys", (PyCFunction)PyCOMPSMDict_getiter, METH_NOARGS,
#      |               ^
#  410|        {"values", (PyCFunction)PyCOMPSMDict_getitervalues, METH_NOARGS,
#  411|        "return iterator returning item's value"},
#  412|->      {"keys", (PyCFunction)PyCOMPSMDict_getiter, METH_NOARGS,
#  413|        "return iterator returning item's key"},
#  414|        {"clear", (PyCFunction)PyCOMPSMDict_clear, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_mdict.c:414:16: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  414 |      {"clear", (PyCFunction)PyCOMPSMDict_clear, METH_NOARGS,
#      |                ^
#  412|        {"keys", (PyCFunction)PyCOMPSMDict_getiter, METH_NOARGS,
#  413|        "return iterator returning item's key"},
#  414|->      {"clear", (PyCFunction)PyCOMPSMDict_clear, METH_NOARGS,
#  415|        "clear the dict"},
#  416|        {"copy", (PyCFunction)PyCOMPSMDict_copy, METH_NOARGS,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_mdict.c:416:15: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  416 |      {"copy", (PyCFunction)PyCOMPSMDict_copy, METH_NOARGS,
#      |               ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  414|        {"clear", (PyCFunction)PyCOMPSMDict_clear, METH_NOARGS,
#  415|        "clear the dict"},
#  416|->      {"copy", (PyCFunction)PyCOMPSMDict_copy, METH_NOARGS,
#  417|        "return shallow copy of dict"},
#  418|        {"update", (PyCFunction)PyCOMPSMDict_update, METH_O,

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/src/python/src/pycomps_sequence.c:646:16: warning[-Wcast-function-type]: cast between incompatible function types from 'PyObject * (*)(PyObject *)' {aka 'struct _object * (*)(struct _object *)'} to 'PyObject * (*)(PyObject *, PyObject *)' {aka 'struct _object * (*)(struct _object *, struct _object *)'}
#  646 |      {"clear", (PyCFunction)PyCOMPSSeq_clear, METH_NOARGS,
#      |                ^
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  644|        {"remove", (PyCFunction)PyCOMPSSeq_remove, METH_O,
#  645|        PyCOMPSSeq_remove__doc__},
#  646|->      {"clear", (PyCFunction)PyCOMPSSeq_clear, METH_NOARGS,
#  647|        "Clear the list"},
#  648|        {"insert", (PyCFunction)PyCOMPSSeq_insert, METH_VARARGS,

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_comps.c: scope_hint: In function 'test_comps_doc_basic_fn'
libcomps-0.1.18/libcomps/tests/check_comps.c:90:32: warning[-Wformat-extra-args]: too many arguments for format
#   90 |     fail_if(tmplist->len == 0, "No groups found");
#      |                                ^~~~~~~~~~~~~~~~~
#   88|       }
#   89|       tmplist = comps_doc_groups(doc);
#   90|->     fail_if(tmplist->len == 0, "No groups found");
#   91|       g = (COMPS_DocGroup*)tmplist->first->comps_obj;
#   92|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:95:32: warning[-Wformat-extra-args]: too many arguments for format
#   95 |     fail_if(tmplist->len == 0, "Group with id 'g1' should be in groups, but"
#      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   93|   
#   94|       tmplist = comps_doc_get_groups(doc, "g1", NULL, NULL, NULL, 0);
#   95|->     fail_if(tmplist->len == 0, "Group with id 'g1' should be in groups, but"
#   96|                                  "cant get it");
#   97|       g = (COMPS_DocGroup*)tmplist->first->comps_obj;

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:101:32: warning[-Wformat-extra-args]: too many arguments for format
#   99|   
#  100|       tmplist = comps_docgroup_get_packages(g, NULL, COMPS_PACKAGE_OPTIONAL);
#  101|->     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#  102|                                  "packages. But have %d.", tmplist->len);
#  103|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:101:32: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  101 |     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  102 |                                "packages. But have %d.", tmplist->len);
#      |                                                          ~~~~~~~~~~~~
#      |                                                                 |
#      |                                                                 size_t {aka long unsigned int}
#   99|   
#  100|       tmplist = comps_docgroup_get_packages(g, NULL, COMPS_PACKAGE_OPTIONAL);
#  101|->     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#  102|                                  "packages. But have %d.", tmplist->len);
#  103|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:105:32: warning[-Wformat-extra-args]: too many arguments for format
#  103|       COMPS_OBJECT_DESTROY(tmplist);
#  104|       tmplist = comps_docgroup_get_packages(g, NULL, COMPS_PACKAGE_MANDATORY);
#  105|->     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#  106|                                  "packages. But have %d.", tmplist->len);
#  107|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:105:32: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  105 |     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  106 |                                "packages. But have %d.", tmplist->len);
#      |                                                          ~~~~~~~~~~~~
#      |                                                                 |
#      |                                                                 size_t {aka long unsigned int}
#  103|       COMPS_OBJECT_DESTROY(tmplist);
#  104|       tmplist = comps_docgroup_get_packages(g, NULL, COMPS_PACKAGE_MANDATORY);
#  105|->     fail_if(tmplist->len != 4, "Group with id 'g1' should have 4 optional "
#  106|                                  "packages. But have %d.", tmplist->len);
#  107|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:279:37: warning[-Wformat-extra-args]: too many arguments for format
#  277|       g2 = (COMPS_DocGroup*)list->first->next->comps_obj;
#  278|       g = comps_docgroup_union(g1, g2);
#  279|->     fail_if(g->packages->len != 14, "Union of (g1 v g2) should have 14 packages"
#  280|               " have %d", g->packages->len);
#  281|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c: scope_hint: In function 'test_comps_doc_setfeats_fn'
libcomps-0.1.18/libcomps/tests/check_comps.c:279:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  279 |     fail_if(g->packages->len != 14, "Union of (g1 v g2) should have 14 packages"
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  280 |             " have %d", g->packages->len);
#      |                         ~~~~~~~~~~~~~~~~
#      |                                    |
#      |                                    size_t {aka long unsigned int}
#  277|       g2 = (COMPS_DocGroup*)list->first->next->comps_obj;
#  278|       g = comps_docgroup_union(g1, g2);
#  279|->     fail_if(g->packages->len != 14, "Union of (g1 v g2) should have 14 packages"
#  280|               " have %d", g->packages->len);
#  281|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:283:36: warning[-Wformat-extra-args]: too many arguments for format
#  281|       COMPS_OBJECT_DESTROY(g);
#  282|       g = comps_docgroup_intersect(g1, g2);
#  283|->     fail_if(g->packages->len != 2, "Intersect of (g1 ^ g2) should have 2"
#  284|               "packages, have %d", g->packages->len);
#  285|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:283:36: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  283 |     fail_if(g->packages->len != 2, "Intersect of (g1 ^ g2) should have 2"
#      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  284 |             "packages, have %d", g->packages->len);
#      |                                  ~~~~~~~~~~~~~~~~
#      |                                             |
#      |                                             size_t {aka long unsigned int}
#  281|       COMPS_OBJECT_DESTROY(g);
#  282|       g = comps_docgroup_intersect(g1, g2);
#  283|->     fail_if(g->packages->len != 2, "Intersect of (g1 ^ g2) should have 2"
#  284|               "packages, have %d", g->packages->len);
#  285|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:289:37: warning[-Wformat-extra-args]: too many arguments for format
#  287|       g2 = (COMPS_DocGroup*)list->first->next->next->comps_obj;
#  288|       g = comps_docgroup_union(g1, g2);
#  289|->     fail_if(g->packages->len != 16, "Union of (g2 v g3) should have 16 packages"
#  290|               " have %d", g->packages->len);
#  291|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:289:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  289 |     fail_if(g->packages->len != 16, "Union of (g2 v g3) should have 16 packages"
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  290 |             " have %d", g->packages->len);
#      |                         ~~~~~~~~~~~~~~~~
#      |                                    |
#      |                                    size_t {aka long unsigned int}
#  287|       g2 = (COMPS_DocGroup*)list->first->next->next->comps_obj;
#  288|       g = comps_docgroup_union(g1, g2);
#  289|->     fail_if(g->packages->len != 16, "Union of (g2 v g3) should have 16 packages"
#  290|               " have %d", g->packages->len);
#  291|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:293:36: warning[-Wformat-extra-args]: too many arguments for format
#  291|       COMPS_OBJECT_DESTROY(g);
#  292|       g = comps_docgroup_intersect(g1, g2);
#  293|->     fail_if(g->packages->len != 0, "Intersect of (g2 ^ g3) should have 0"
#  294|               "packages, have %d", g->packages->len);
#  295|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:293:36: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  293 |     fail_if(g->packages->len != 0, "Intersect of (g2 ^ g3) should have 0"
#      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  294 |             "packages, have %d", g->packages->len);
#      |                                  ~~~~~~~~~~~~~~~~
#      |                                             |
#      |                                             size_t {aka long unsigned int}
#  291|       COMPS_OBJECT_DESTROY(g);
#  292|       g = comps_docgroup_intersect(g1, g2);
#  293|->     fail_if(g->packages->len != 0, "Intersect of (g2 ^ g3) should have 0"
#  294|               "packages, have %d", g->packages->len);
#  295|       COMPS_OBJECT_DESTROY(g);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:303:37: warning[-Wformat-extra-args]: too many arguments for format
#  301|       c = comps_doccategory_union(c1, c2);
#  302|       //print_category(c);
#  303|->     fail_if(c->group_ids->len != 4, "Union of (c1 v c2) should have 4 "
#  304|               "group ids, have %d", c->group_ids->len);
#  305|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:303:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  303 |     fail_if(c->group_ids->len != 4, "Union of (c1 v c2) should have 4 "
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  304 |             "group ids, have %d", c->group_ids->len);
#      |                                   ~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  301|       c = comps_doccategory_union(c1, c2);
#  302|       //print_category(c);
#  303|->     fail_if(c->group_ids->len != 4, "Union of (c1 v c2) should have 4 "
#  304|               "group ids, have %d", c->group_ids->len);
#  305|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:308:37: warning[-Wformat-extra-args]: too many arguments for format
#  306|   
#  307|       c = comps_doccategory_intersect(c1, c2);
#  308|->     fail_if(c->group_ids->len != 2, "Intersect of (c1 ^ c2) should have 2"
#  309|               "group ids, have %d", c->group_ids->len);
#  310|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:308:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  308 |     fail_if(c->group_ids->len != 2, "Intersect of (c1 ^ c2) should have 2"
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  309 |             "group ids, have %d", c->group_ids->len);
#      |                                   ~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  306|   
#  307|       c = comps_doccategory_intersect(c1, c2);
#  308|->     fail_if(c->group_ids->len != 2, "Intersect of (c1 ^ c2) should have 2"
#  309|               "group ids, have %d", c->group_ids->len);
#  310|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:315:37: warning[-Wformat-extra-args]: too many arguments for format
#  313|       c2 = (COMPS_DocCategory*)list->first->next->next->comps_obj;
#  314|       c = comps_doccategory_union(c1, c2);
#  315|->     fail_if(c->group_ids->len != 4, "Union of (c2 v c3) should have 4 "
#  316|               "group ids, have %d", c->group_ids->len);
#  317|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:315:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  315 |     fail_if(c->group_ids->len != 4, "Union of (c2 v c3) should have 4 "
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  316 |             "group ids, have %d", c->group_ids->len);
#      |                                   ~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  313|       c2 = (COMPS_DocCategory*)list->first->next->next->comps_obj;
#  314|       c = comps_doccategory_union(c1, c2);
#  315|->     fail_if(c->group_ids->len != 4, "Union of (c2 v c3) should have 4 "
#  316|               "group ids, have %d", c->group_ids->len);
#  317|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:319:37: warning[-Wformat-extra-args]: too many arguments for format
#  317|       COMPS_OBJECT_DESTROY(c);
#  318|       c = comps_doccategory_intersect(c1, c2);
#  319|->     fail_if(c->group_ids->len != 2, "Intersect of (c2 ^ c3) should have 2"
#  320|               "group ids, have %d", c->group_ids->len);
#  321|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:319:37: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  319 |     fail_if(c->group_ids->len != 2, "Intersect of (c2 ^ c3) should have 2"
#      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  320 |             "group ids, have %d", c->group_ids->len);
#      |                                   ~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  317|       COMPS_OBJECT_DESTROY(c);
#  318|       c = comps_doccategory_intersect(c1, c2);
#  319|->     fail_if(c->group_ids->len != 2, "Intersect of (c2 ^ c3) should have 2"
#  320|               "group ids, have %d", c->group_ids->len);
#  321|       COMPS_OBJECT_DESTROY(c);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:328:38: warning[-Wformat-extra-args]: too many arguments for format
#  326|       e2 = (COMPS_DocEnv*)list->first->next->comps_obj;
#  327|       e = comps_docenv_union(e1, e2);
#  328|->     fail_if(e->group_list->len != 4, "Union of (e1 v e2) should have 4 "
#  329|               "groud ids have %d", e->group_list->len);
#  330|       fail_if(e->option_list->len != 7, "Union of (e1 v e2) should have 7 "

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:328:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  328 |     fail_if(e->group_list->len != 4, "Union of (e1 v e2) should have 4 "
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  329 |             "groud ids have %d", e->group_list->len);
#      |                                  ~~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  326|       e2 = (COMPS_DocEnv*)list->first->next->comps_obj;
#  327|       e = comps_docenv_union(e1, e2);
#  328|->     fail_if(e->group_list->len != 4, "Union of (e1 v e2) should have 4 "
#  329|               "groud ids have %d", e->group_list->len);
#  330|       fail_if(e->option_list->len != 7, "Union of (e1 v e2) should have 7 "

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:330:39: warning[-Wformat-extra-args]: too many arguments for format
#  328|       fail_if(e->group_list->len != 4, "Union of (e1 v e2) should have 4 "
#  329|               "groud ids have %d", e->group_list->len);
#  330|->     fail_if(e->option_list->len != 7, "Union of (e1 v e2) should have 7 "
#  331|               "option ids have %d", e->option_list->len);
#  332|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:330:39: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  330 |     fail_if(e->option_list->len != 7, "Union of (e1 v e2) should have 7 "
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  331 |             "option ids have %d", e->option_list->len);
#      |                                   ~~~~~~~~~~~~~~~~~~~
#      |                                                 |
#      |                                                 size_t {aka long unsigned int}
#  328|       fail_if(e->group_list->len != 4, "Union of (e1 v e2) should have 4 "
#  329|               "groud ids have %d", e->group_list->len);
#  330|->     fail_if(e->option_list->len != 7, "Union of (e1 v e2) should have 7 "
#  331|               "option ids have %d", e->option_list->len);
#  332|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:334:38: warning[-Wformat-extra-args]: too many arguments for format
#  332|       COMPS_OBJECT_DESTROY(e);
#  333|       e = comps_docenv_intersect(e1, e2);
#  334|->     fail_if(e->group_list->len != 2, "Intersect of (e1 ^ e2) should have 2"
#  335|               "group ids have %d", e->group_list->len);
#  336|       fail_if(e->option_list->len != 1, "Union of (e1 v e2) should have 1 "

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:334:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  334 |     fail_if(e->group_list->len != 2, "Intersect of (e1 ^ e2) should have 2"
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  335 |             "group ids have %d", e->group_list->len);
#      |                                  ~~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  332|       COMPS_OBJECT_DESTROY(e);
#  333|       e = comps_docenv_intersect(e1, e2);
#  334|->     fail_if(e->group_list->len != 2, "Intersect of (e1 ^ e2) should have 2"
#  335|               "group ids have %d", e->group_list->len);
#  336|       fail_if(e->option_list->len != 1, "Union of (e1 v e2) should have 1 "

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:336:39: warning[-Wformat-extra-args]: too many arguments for format
#  334|       fail_if(e->group_list->len != 2, "Intersect of (e1 ^ e2) should have 2"
#  335|               "group ids have %d", e->group_list->len);
#  336|->     fail_if(e->option_list->len != 1, "Union of (e1 v e2) should have 1 "
#  337|               "option ids have %d", e->option_list->len);
#  338|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:336:39: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  336 |     fail_if(e->option_list->len != 1, "Union of (e1 v e2) should have 1 "
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  337 |             "option ids have %d", e->option_list->len);
#      |                                   ~~~~~~~~~~~~~~~~~~~
#      |                                                 |
#      |                                                 size_t {aka long unsigned int}
#  334|       fail_if(e->group_list->len != 2, "Intersect of (e1 ^ e2) should have 2"
#  335|               "group ids have %d", e->group_list->len);
#  336|->     fail_if(e->option_list->len != 1, "Union of (e1 v e2) should have 1 "
#  337|               "option ids have %d", e->option_list->len);
#  338|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:343:38: warning[-Wformat-extra-args]: too many arguments for format
#  341|       e2 = (COMPS_DocEnv*)list->first->next->next->comps_obj;
#  342|       e = comps_docenv_union(e1, e2);
#  343|->     fail_if(e->group_list->len != 4, "Union of (e2 v e3) should have 4 "
#  344|               "groud ids have %d", e->group_list->len);
#  345|       fail_if(e->option_list->len != 6, "Union of (e2 v e3) should have 7 "

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:343:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  343 |     fail_if(e->group_list->len != 4, "Union of (e2 v e3) should have 4 "
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  344 |             "groud ids have %d", e->group_list->len);
#      |                                  ~~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  341|       e2 = (COMPS_DocEnv*)list->first->next->next->comps_obj;
#  342|       e = comps_docenv_union(e1, e2);
#  343|->     fail_if(e->group_list->len != 4, "Union of (e2 v e3) should have 4 "
#  344|               "groud ids have %d", e->group_list->len);
#  345|       fail_if(e->option_list->len != 6, "Union of (e2 v e3) should have 7 "

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:345:39: warning[-Wformat-extra-args]: too many arguments for format
#  343|       fail_if(e->group_list->len != 4, "Union of (e2 v e3) should have 4 "
#  344|               "groud ids have %d", e->group_list->len);
#  345|->     fail_if(e->option_list->len != 6, "Union of (e2 v e3) should have 7 "
#  346|               "option ids have %d", e->option_list->len);
#  347|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:345:39: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  345 |     fail_if(e->option_list->len != 6, "Union of (e2 v e3) should have 7 "
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  346 |             "option ids have %d", e->option_list->len);
#      |                                   ~~~~~~~~~~~~~~~~~~~
#      |                                                 |
#      |                                                 size_t {aka long unsigned int}
#  343|       fail_if(e->group_list->len != 4, "Union of (e2 v e3) should have 4 "
#  344|               "groud ids have %d", e->group_list->len);
#  345|->     fail_if(e->option_list->len != 6, "Union of (e2 v e3) should have 7 "
#  346|               "option ids have %d", e->option_list->len);
#  347|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:349:38: warning[-Wformat-extra-args]: too many arguments for format
#  347|       COMPS_OBJECT_DESTROY(e);
#  348|       e = comps_docenv_intersect(e1, e2);
#  349|->     fail_if(e->group_list->len != 2, "Intersect of (e2 ^ e3) should have 2 "
#  350|               "groupids  have %d", e->group_list->len);
#  351|       fail_if(e->option_list->len != 2, "Intersect of (e2 v e3) should have 2 "

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:349:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  349 |     fail_if(e->group_list->len != 2, "Intersect of (e2 ^ e3) should have 2 "
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  350 |             "groupids  have %d", e->group_list->len);
#      |                                  ~~~~~~~~~~~~~~~~~~
#      |                                               |
#      |                                               size_t {aka long unsigned int}
#  347|       COMPS_OBJECT_DESTROY(e);
#  348|       e = comps_docenv_intersect(e1, e2);
#  349|->     fail_if(e->group_list->len != 2, "Intersect of (e2 ^ e3) should have 2 "
#  350|               "groupids  have %d", e->group_list->len);
#  351|       fail_if(e->option_list->len != 2, "Intersect of (e2 v e3) should have 2 "

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:351:39: warning[-Wformat-extra-args]: too many arguments for format
#  349|       fail_if(e->group_list->len != 2, "Intersect of (e2 ^ e3) should have 2 "
#  350|               "groupids  have %d", e->group_list->len);
#  351|->     fail_if(e->option_list->len != 2, "Intersect of (e2 v e3) should have 2 "
#  352|               "option ids have %d", e->option_list->len);
#  353|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:351:39: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  351 |     fail_if(e->option_list->len != 2, "Intersect of (e2 v e3) should have 2 "
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  352 |             "option ids have %d", e->option_list->len);
#      |                                   ~~~~~~~~~~~~~~~~~~~
#      |                                                 |
#      |                                                 size_t {aka long unsigned int}
#  349|       fail_if(e->group_list->len != 2, "Intersect of (e2 ^ e3) should have 2 "
#  350|               "groupids  have %d", e->group_list->len);
#  351|->     fail_if(e->option_list->len != 2, "Intersect of (e2 v e3) should have 2 "
#  352|               "option ids have %d", e->option_list->len);
#  353|       COMPS_OBJECT_DESTROY(e);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:358:29: warning[-Wformat-extra-args]: too many arguments for format
#  356|       tmpdoc = comps_doc_union(doc, doc2);
#  357|       list = comps_doc_groups(tmpdoc);
#  358|->     fail_if(list->len != 6, "Union of (doc ^ doc2) should have 6 "
#  359|               "groups  have %d", list->len);
#  360|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:358:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  358 |     fail_if(list->len != 6, "Union of (doc ^ doc2) should have 6 "
#      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  359 |             "groups  have %d", list->len);
#      |                                ~~~~~~~~~
#      |                                    |
#      |                                    size_t {aka long unsigned int}
#  356|       tmpdoc = comps_doc_union(doc, doc2);
#  357|       list = comps_doc_groups(tmpdoc);
#  358|->     fail_if(list->len != 6, "Union of (doc ^ doc2) should have 6 "
#  359|               "groups  have %d", list->len);
#  360|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:362:29: warning[-Wformat-extra-args]: too many arguments for format
#  360|       COMPS_OBJECT_DESTROY(list);
#  361|       list = comps_doc_categories(tmpdoc);
#  362|->     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#  363|               "should have 4 categories  have %d", list->len);
#  364|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:362:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  362 |     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
#  363 |             "should have 4 categories  have %d", list->len);
#      |                                                  ~~~~~~~~~
#      |                                                      |
#      |                                                      size_t {aka long unsigned int}
#  360|       COMPS_OBJECT_DESTROY(list);
#  361|       list = comps_doc_categories(tmpdoc);
#  362|->     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#  363|               "should have 4 categories  have %d", list->len);
#  364|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:366:29: warning[-Wformat-extra-args]: too many arguments for format
#  364|       COMPS_OBJECT_DESTROY(list);
#  365|       list = comps_doc_environments(tmpdoc);
#  366|->     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#  367|               "should have 4 environments  have %d", list->len);
#  368|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:366:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  366 |     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
#  367 |             "should have 4 environments  have %d", list->len);
#      |                                                    ~~~~~~~~~
#      |                                                        |
#      |                                                        size_t {aka long unsigned int}
#  364|       COMPS_OBJECT_DESTROY(list);
#  365|       list = comps_doc_environments(tmpdoc);
#  366|->     fail_if(list->len != 4, "Union of (doc ^ doc2) "
#  367|               "should have 4 environments  have %d", list->len);
#  368|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:372:29: warning[-Wformat-extra-args]: too many arguments for format
#  370|       tmpdoc = comps_doc_intersect(doc, doc2);
#  371|       list = comps_doc_groups(tmpdoc);
#  372|->     fail_if(list->len != 2, "Intersect of (doc ^ doc2) "
#  373|               "should have 2 groups  have %d", list->len);
#  374|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:372:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  372 |     fail_if(list->len != 2, "Intersect of (doc ^ doc2) "
#      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  373 |             "should have 2 groups  have %d", list->len);
#      |                                              ~~~~~~~~~
#      |                                                  |
#      |                                                  size_t {aka long unsigned int}
#  370|       tmpdoc = comps_doc_intersect(doc, doc2);
#  371|       list = comps_doc_groups(tmpdoc);
#  372|->     fail_if(list->len != 2, "Intersect of (doc ^ doc2) "
#  373|               "should have 2 groups  have %d", list->len);
#  374|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:376:29: warning[-Wformat-extra-args]: too many arguments for format
#  374|       COMPS_OBJECT_DESTROY(list);
#  375|       list = comps_doc_categories(tmpdoc);
#  376|->     fail_if(list->len != 2, "Intersect of (doc ^ doc2)"
#  377|               " should have 2 categories  have %d", list->len);
#  378|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:376:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  376 |     fail_if(list->len != 2, "Intersect of (doc ^ doc2)"
#      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#  377 |             " should have 2 categories  have %d", list->len);
#      |                                                   ~~~~~~~~~
#      |                                                       |
#      |                                                       size_t {aka long unsigned int}
#  374|       COMPS_OBJECT_DESTROY(list);
#  375|       list = comps_doc_categories(tmpdoc);
#  376|->     fail_if(list->len != 2, "Intersect of (doc ^ doc2)"
#  377|               " should have 2 categories  have %d", list->len);
#  378|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_comps.c:380:29: warning[-Wformat-extra-args]: too many arguments for format
libcomps-0.1.18/libcomps/tests/check_comps.c: scope_hint: At top level
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  378|       COMPS_OBJECT_DESTROY(list);
#  379|       list = comps_doc_environments(tmpdoc);
#  380|->     fail_if(list->len != 2, "Intersect of "
#  381|               "(doc ^ doc2) should have 2 environments  have %d", list->len);
#  382|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_comps.c:380:29: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#  380 |     fail_if(list->len != 2, "Intersect of "
#      |                             ^~~~~~~~~~~~~~~
#  381 |             "(doc ^ doc2) should have 2 environments  have %d", list->len);
#      |                                                                 ~~~~~~~~~
#      |                                                                     |
#      |                                                                     size_t {aka long unsigned int}
#  378|       COMPS_OBJECT_DESTROY(list);
#  379|       list = comps_doc_environments(tmpdoc);
#  380|->     fail_if(list->len != 2, "Intersect of "
#  381|               "(doc ^ doc2) should have 2 environments  have %d", list->len);
#  382|       COMPS_OBJECT_DESTROY(list);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_comps_parse1_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:89:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#   89 |     ck_assert_msg(tmplist->len == 3, "Should have 3 groups parsed."
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   90 |             "Have %d", tmplist->len);
#      |                        ~~~~~~~~~~~~   
#      |                               |
#      |                               size_t {aka long unsigned int}
#   87|       }
#   88|       tmplist = comps_doc_groups(parsed->comps_doc);
#   89|->     ck_assert_msg(tmplist->len == 3, "Should have 3 groups parsed."
#   90|               "Have %d", tmplist->len);
#   91|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:93:38: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#   93 |     ck_assert_msg(tmplist->len == 2, "Should have 2 categories"
#      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~
#   94 |             "parsed. Have %d", tmplist->len);
#      |                                ~~~~~~~~~~~~
#      |                                       |
#      |                                       size_t {aka long unsigned int}
#   91|       COMPS_OBJECT_DESTROY(tmplist);
#   92|       tmplist = comps_doc_categories(parsed->comps_doc);
#   93|->     ck_assert_msg(tmplist->len == 2, "Should have 2 categories"
#   94|               "parsed. Have %d", tmplist->len);
#   95|       COMPS_OBJECT_DESTROY(tmplist);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:98:13: warning[-Wformat-extra-args]: too many arguments for format
#   98 |             "Should have 1 environment parsed. Have %d", tmplist->len);
#      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   96|       tmplist = comps_doc_environments(parsed->comps_doc);
#   97|       fail_if(tmplist->len != 1,
#   98|->             "Should have 1 environment parsed. Have %d", tmplist->len);
#   99|       COMPS_OBJECT_DESTROY(tmplist);
#  100|   

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:98:13: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'}
#   98 |             "Should have 1 environment parsed. Have %d", tmplist->len);
#      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~
#      |                                                                 |
#      |                                                                 size_t {aka long unsigned int}
libcomps-0.1.18/libcomps/tests/check_parse.c:98:54: note: format string is defined here
#   98 |             "Should have 1 environment parsed. Have %d", tmplist->len);
#      |                                                     ~^
#      |                                                      |
#      |                                                      int
#      |                                                     %ld
#   96|       tmplist = comps_doc_environments(parsed->comps_doc);
#   97|       fail_if(tmplist->len != 1,
#   98|->             "Should have 1 environment parsed. Have %d", tmplist->len);
#   99|       COMPS_OBJECT_DESTROY(tmplist);
#  100|   

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:105:34: warning[-Wformat-extra-args]: too many arguments for format
#  105 |         fail_if(tmpobj2 == NULL, "Group not found");
#      |                                  ^~~~~~~~~~~~~~~~~
#  103|           tmplist = comps_doc_groups(parsed->comps_doc);
#  104|           tmpobj2 = comps_objlist_get_x(tmplist, i);
#  105|->         fail_if(tmpobj2 == NULL, "Group not found");
#  106|           tmpobj = comps_docgroup_get_id((COMPS_DocGroup*)tmpobj2);
#  107|           tmpstr = comps_object_tostr(tmpobj);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:109:24: warning[-Wformat-extra-args]: too many arguments for format
#  109 |                        "%d.group should have id:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  107|           tmpstr = comps_object_tostr(tmpobj);
#  108|           fail_if(strcmp(tmpstr, groups_ids[i]) != 0,
#  109|->                        "%d.group should have id:%s not %s",
#  110|                           i, groups_ids[i], tmpstr);
#  111|           free(tmpstr);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:117:24: warning[-Wformat-extra-args]: too many arguments for format
#  117 |                        "%d.group should have name:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  115|           tmpstr = comps_object_tostr(tmpobj);
#  116|           fail_if(strcmp(tmpstr, groups_names[i]) != 0,
#  117|->                        "%d.group should have name:%s not %s",
#  118|                           i, groups_names[i], tmpstr);
#  119|           free(tmpstr);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:125:24: warning[-Wformat-extra-args]: too many arguments for format
#  125 |                        "%d.group should have desc:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  123|           tmpstr = comps_object_tostr(tmpobj);
#  124|           fail_if(strcmp(tmpstr, groups_descs[i]) != 0,
#  125|->                        "%d.group should have desc:%s not %s",
#  126|                           i, groups_descs[i], tmpstr);
#  127|           free(tmpstr);

Error: COMPILER_WARNING (CWE-195):
libcomps-0.1.18/libcomps/tests/check_parse.c:133:38: warning[-Wsign-compare]: comparison of integer expressions of different signedness: 'int' and 'size_t' {aka 'long unsigned int'}
#  133 |         fail_if(group_packages[i][0] != tmplist->len, "Group #%d should have"
#      |                                      ^~
#  131|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  132|                                                COMPS_PACKAGE_DEFAULT);
#  133|->         fail_if(group_packages[i][0] != tmplist->len, "Group #%d should have"
#  134|                   " %d default packages, Have %d", i, group_packages[i][0],
#  135|                   tmplist->len);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:133:55: warning[-Wformat-extra-args]: too many arguments for format
#  131|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  132|                                                COMPS_PACKAGE_DEFAULT);
#  133|->         fail_if(group_packages[i][0] != tmplist->len, "Group #%d should have"
#  134|                   " %d default packages, Have %d", i, group_packages[i][0],
#  135|                   tmplist->len);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:133:55: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 7 has type 'size_t' {aka 'long unsigned int'}
#  133 |         fail_if(group_packages[i][0] != tmplist->len, "Group #%d should have"
#      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~
#  134 |                 " %d default packages, Have %d", i, group_packages[i][0],
#  135 |                 tmplist->len);
#      |                 ~~~~~~~~~~~~                           
#      |                        |
#      |                        size_t {aka long unsigned int}
#  131|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  132|                                                COMPS_PACKAGE_DEFAULT);
#  133|->         fail_if(group_packages[i][0] != tmplist->len, "Group #%d should have"
#  134|                   " %d default packages, Have %d", i, group_packages[i][0],
#  135|                   tmplist->len);

Error: COMPILER_WARNING (CWE-195):
libcomps-0.1.18/libcomps/tests/check_parse.c:139:38: warning[-Wsign-compare]: comparison of integer expressions of different signedness: 'int' and 'size_t' {aka 'long unsigned int'}
#  139 |         fail_if(group_packages[i][1] != tmplist->len, "Group #%d should have"
#      |                                      ^~
#  137|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  138|                                                COMPS_PACKAGE_OPTIONAL);
#  139|->         fail_if(group_packages[i][1] != tmplist->len, "Group #%d should have"
#  140|                   " %d optional packages, Have %d", i, group_packages[i][1],
#  141|                   tmplist->len);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:139:55: warning[-Wformat-extra-args]: too many arguments for format
#  137|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  138|                                                COMPS_PACKAGE_OPTIONAL);
#  139|->         fail_if(group_packages[i][1] != tmplist->len, "Group #%d should have"
#  140|                   " %d optional packages, Have %d", i, group_packages[i][1],
#  141|                   tmplist->len);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:139:55: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 7 has type 'size_t' {aka 'long unsigned int'}
#  139 |         fail_if(group_packages[i][1] != tmplist->len, "Group #%d should have"
#      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~
#  140 |                 " %d optional packages, Have %d", i, group_packages[i][1],
#  141 |                 tmplist->len);
#      |                 ~~~~~~~~~~~~                           
#      |                        |
#      |                        size_t {aka long unsigned int}
#  137|           tmplist = comps_docgroup_get_packages((COMPS_DocGroup*)tmpobj2, NULL,
#  138|                                                COMPS_PACKAGE_OPTIONAL);
#  139|->         fail_if(group_packages[i][1] != tmplist->len, "Group #%d should have"
#  140|                   " %d optional packages, Have %d", i, group_packages[i][1],
#  141|                   tmplist->len);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:150:24: warning[-Wformat-extra-args]: too many arguments for format
#  150 |                        "%s. category should have id:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  148|           tmpstr = comps_object_tostr(tmpobj);
#  149|           fail_if(strcmp(tmpstr, cats_ids[i]) != 0,
#  150|->                        "%s. category should have id:%s not %s",
#  151|                           i, cats_ids[i], tmpstr);
#  152|           free(tmpstr);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:150:24: warning[-Wformat=]: format '%s' expects argument of type 'char *', but argument 5 has type 'int'
#  150 |                        "%s. category should have id:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  151 |                         i, cats_ids[i], tmpstr);
#      |                         ~
#      |                         |
#      |                         int
libcomps-0.1.18/libcomps/tests/check_parse.c:150:26: note: format string is defined here
#  150 |                        "%s. category should have id:%s not %s",
#      |                         ~^
#      |                          |
#      |                          char *
#      |                         %d
#  148|           tmpstr = comps_object_tostr(tmpobj);
#  149|           fail_if(strcmp(tmpstr, cats_ids[i]) != 0,
#  150|->                        "%s. category should have id:%s not %s",
#  151|                           i, cats_ids[i], tmpstr);
#  152|           free(tmpstr);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:158:24: warning[-Wformat-extra-args]: too many arguments for format
#  158 |                        "%s. category should have name:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  156|           tmpstr = comps_object_tostr(tmpobj);
#  157|           fail_if(strcmp(tmpstr, cats_names[i]) != 0,
#  158|->                        "%s. category should have name:%s not %s",
#  159|                           i, cats_names[i], tmpstr);
#  160|           free(tmpstr);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:158:24: warning[-Wformat=]: format '%s' expects argument of type 'char *', but argument 5 has type 'int'
#  158 |                        "%s. category should have name:%s not %s",
#      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  159 |                         i, cats_names[i], tmpstr);
#      |                         ~
#      |                         |
#      |                         int
libcomps-0.1.18/libcomps/tests/check_parse.c:158:26: note: format string is defined here
#  158 |                        "%s. category should have name:%s not %s",
#      |                         ~^
#      |                          |
#      |                          char *
#      |                         %d
#  156|           tmpstr = comps_object_tostr(tmpobj);
#  157|           fail_if(strcmp(tmpstr, cats_names[i]) != 0,
#  158|->                        "%s. category should have name:%s not %s",
#  159|                           i, cats_names[i], tmpstr);
#  160|           free(tmpstr);

Error: COMPILER_WARNING (CWE-195):
libcomps-0.1.18/libcomps/tests/check_parse.c:163:63: warning[-Wsign-compare]: comparison of integer expressions of different signedness: 'size_t' {aka 'long unsigned int'} and 'int'
#  163 |         fail_if(((COMPS_DocCategory*)tmpobj2)->group_ids->len != cats_gids[i],
#      |                                                               ^~
#  161|           COMPS_OBJECT_DESTROY(tmpobj);
#  162|   
#  163|->         fail_if(((COMPS_DocCategory*)tmpobj2)->group_ids->len != cats_gids[i],
#  164|                   "Category #%d should have %d groupids, have %d", i,
#  165|                   cats_gids[i], ((COMPS_DocCategory*)tmpobj2)->group_ids->len);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:164:17: warning[-Wformat-extra-args]: too many arguments for format
#  164 |                 "Category #%d should have %d groupids, have %d", i,
#      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  162|   
#  163|           fail_if(((COMPS_DocCategory*)tmpobj2)->group_ids->len != cats_gids[i],
#  164|->                 "Category #%d should have %d groupids, have %d", i,
#  165|                   cats_gids[i], ((COMPS_DocCategory*)tmpobj2)->group_ids->len);
#  166|           COMPS_OBJECT_DESTROY(tmpobj2);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:164:17: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 7 has type 'size_t' {aka 'long unsigned int'}
#  164 |                 "Category #%d should have %d groupids, have %d", i,
#      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  165 |                 cats_gids[i], ((COMPS_DocCategory*)tmpobj2)->group_ids->len);
#      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      |                                                                       |
#      |                                                                       size_t {aka long unsigned int}
libcomps-0.1.18/libcomps/tests/check_parse.c:164:62: note: format string is defined here
#  164 |                 "Category #%d should have %d groupids, have %d", i,
#      |                                                             ~^
#      |                                                              |
#      |                                                              int
#      |                                                             %ld
#  162|   
#  163|           fail_if(((COMPS_DocCategory*)tmpobj2)->group_ids->len != cats_gids[i],
#  164|->                 "Category #%d should have %d groupids, have %d", i,
#  165|                   cats_gids[i], ((COMPS_DocCategory*)tmpobj2)->group_ids->len);
#  166|           COMPS_OBJECT_DESTROY(tmpobj2);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:177:21: warning[-Wformat-extra-args]: too many arguments for format
#  177 |     fail_if(ret >0, "XML shouldn't be valid. Validation returned: %d", ret);
#      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  175|       comps_parse_file(parsed, fp, NULL);
#  176|       ret = comps_parse_validate_dtd("sample-bad-elem.xml", "comps.dtd");
#  177|->     fail_if(ret >0, "XML shouldn't be valid. Validation returned: %d", ret);
#  178|   
#  179|       if (parsed->log->entries->first != NULL) {

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'check_errors'
libcomps-0.1.18/libcomps/tests/check_parse.c:198:17: warning[-Wformat-extra-args]: too many arguments for format
#  198 |                 "%d err opt_message doesn't match (%d != %d)", i,
#      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  196|           fail_if(((COMPS_LogEntry*)it->data)->arg_count !=
#  197|                   known_errors[i]->arg_count,
#  198|->                 "%d err opt_message doesn't match (%d != %d)", i,
#  199|                   ((COMPS_LogEntry*)it->data)->arg_count,
#  200|                   known_errors[i]->arg_count);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:202:44: warning[-Wformat-extra-args]: too many arguments for format
#  202 |                     known_errors[i]->code, "%d. err code different\n (%d != %d)",
#      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  200|                   known_errors[i]->arg_count);
#  201|           fail_if(((COMPS_LogEntry*)it->data)->code !=
#  202|->                     known_errors[i]->code, "%d. err code different\n (%d != %d)",
#  203|                       i, ((COMPS_LogEntry*)it->data)->code,
#  204|                       known_errors[i]->code);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:210:70: warning[-Wformat-extra-args]: too many arguments for format
#  210 |                                      known_errors[i]->args[x]) == 0, "%d. %s != %s",
#      |                                                                      ^~~~~~~~~~~~~~
#  208|               _y = comps_object_tostr(known_errors[i]->args[x]);
#  209|               fail_if(comps_object_cmp(((COMPS_LogEntry*)it->data)->args[x],
#  210|->                                      known_errors[i]->args[x]) == 0, "%d. %s != %s",
#  211|                                        x, _x, _y);
#  212|               free(_x);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_comps_parse3_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:344:21: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'void *'
#  344 |     fail_if(tmpobj, "%d. category should have NULL id\n");
#      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
libcomps-0.1.18/libcomps/tests/check_parse.c:344:23: note: format string is defined here
#  344 |     fail_if(tmpobj, "%d. category should have NULL id\n");
#      |                      ~^
#      |                       |
#      |                       int
#      |                      %p
#  342|   
#  343|       tmpobj = comps_docgroup_get_id((COMPS_DocGroup*)it->comps_obj);
#  344|->     fail_if(tmpobj, "%d. category should have NULL id\n");
#  345|       COMPS_OBJECT_DESTROY(tmpobj);
#  346|       tmpobj = comps_docgroup_get_name((COMPS_DocGroup*)it->comps_obj);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:347:21: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'void *'
#  347 |     fail_if(tmpobj, "%d. category should have NULL name\n");
#      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
libcomps-0.1.18/libcomps/tests/check_parse.c:347:23: note: format string is defined here
#  347 |     fail_if(tmpobj, "%d. category should have NULL name\n");
#      |                      ~^
#      |                       |
#      |                       int
#      |                      %p
#  345|       COMPS_OBJECT_DESTROY(tmpobj);
#  346|       tmpobj = comps_docgroup_get_name((COMPS_DocGroup*)it->comps_obj);
#  347|->     fail_if(tmpobj, "%d. category should have NULL name\n");
#  348|       COMPS_OBJECT_DESTROY(tmpobj);
#  349|       tmpobj = comps_docgroup_get_desc((COMPS_DocGroup*)it->comps_obj);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:350:21: warning[-Wformat=]: format '%d' expects argument of type 'int', but argument 5 has type 'void *'
#  350 |     fail_if(tmpobj, "%d. category should have NULL description\n");
#      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
libcomps-0.1.18/libcomps/tests/check_parse.c:350:23: note: format string is defined here
#  350 |     fail_if(tmpobj, "%d. category should have NULL description\n");
#      |                      ~^
#      |                       |
#      |                       int
#      |                      %p
#  348|       COMPS_OBJECT_DESTROY(tmpobj);
#  349|       tmpobj = comps_docgroup_get_desc((COMPS_DocGroup*)it->comps_obj);
#  350|->     fail_if(tmpobj, "%d. category should have NULL description\n");
#  351|       COMPS_OBJECT_DESTROY(tmpobj);
#  352|       comps_parse_parsed_destroy(parsed);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c:20: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_comps_fedora_parse_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:479:39: warning[-Wformat-extra-args]: too many arguments for format
#  479 |     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  477|       comps_parse_file(parsed, fp, NULL);
#  478|       //printf("log len:%d\n", parsed->log->logger_data->len);
#  479|->     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#  480|       //printf("log len:%d\n", parsed->log->logger_data->len);
#  481|       //err_str = comps_log_str(parsed->log);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_main2_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:507:39: warning[-Wformat-extra-args]: too many arguments for format
#  507 |     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  505|       fp = fopen("main_comps2.xml", "r");
#  506|       comps_parse_file(parsed, fp, NULL);
#  507|->     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#  508|       //comps2xml_f(parsed->comps_doc, "fed2.xml", 0);
#  509|       comps_parse_parsed_destroy(parsed);

Error: COMPILER_WARNING (CWE-685):
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_arch_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:557:39: warning[-Wformat-extra-args]: too many arguments for format
#  557 |     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  555|       comps_parse_file(parsed, fp, NULL);
#  556|       //comps_log_print(parsed->log);
#  557|->     fail_if(parsed->fatal_error != 0, "Some fatal errors found after parsing");
#  558|       //comps2xml_f(parsed->comps_doc, "fed2.xml", 0);
#  559|       arches = (COMPS_ObjList*)comps_object_create(&COMPS_ObjList_ObjInfo, NULL);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_arch_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:588:1: warning: warning: conversion from 'COMPS_DocCategory *' to 'COMPS_DocGroup *': incompatible pointer types
#  586|       ck_assert(list->len == 2);
#  587|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  588|->         g = (COMPS_DocCategory*)it->comps_obj;
#  589|           str = (COMPS_Str*)comps_doccategory_get_id(g);
#  590|           ck_assert_msg(strcmp(str->val, cats[0][x]) == 0, "%s != %s",

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/tests/check_parse.c:588:11: warning[-Wincompatible-pointer-types]: assignment to 'COMPS_DocGroup *' from incompatible pointer type 'COMPS_DocCategory *'
#  588 |         g = (COMPS_DocCategory*)it->comps_obj;
#      |           ^
#  586|       ck_assert(list->len == 2);
#  587|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  588|->         g = (COMPS_DocCategory*)it->comps_obj;
#  589|           str = (COMPS_Str*)comps_doccategory_get_id(g);
#  590|           ck_assert_msg(strcmp(str->val, cats[0][x]) == 0, "%s != %s",

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_arch_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:589:1: warning: warning: conversion from 'COMPS_DocGroup *' to 'COMPS_DocCategory *': incompatible pointer types
#  587|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  588|           g = (COMPS_DocCategory*)it->comps_obj;
#  589|->         str = (COMPS_Str*)comps_doccategory_get_id(g);
#  590|           ck_assert_msg(strcmp(str->val, cats[0][x]) == 0, "%s != %s",
#  591|                         str->val, cats[0][x]);

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/tests/check_parse.c:589:52: warning[-Wincompatible-pointer-types]: passing argument 1 of 'comps_doccategory_get_id' from incompatible pointer type
#  589 |         str = (COMPS_Str*)comps_doccategory_get_id(g);
#      |                                                    ^
#      |                                                    |
#      |                                                    COMPS_DocGroup *
libcomps-0.1.18/libcomps/src/comps_objradix.h:28: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_objdict.h:32: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_doc.h:24: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:23: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_doccategory.h:110:24: note: expected 'COMPS_DocCategory *' but argument is of type 'COMPS_DocGroup *'
#  110 | HEAD_COMPS_PROP_GETTER(category, COMPS_DocCategory, id) /*comps_utils.h macro*/
#      |                                
libcomps-0.1.18/libcomps/src/comps_utils.h:94:71: note: in definition of macro 'HEAD_COMPS_PROP_GETTER'
#   94 |                                                             (OBJTYPE *OBJNAME);
#      |                                                                       ^~~~~~~
#  587|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  588|           g = (COMPS_DocCategory*)it->comps_obj;
#  589|->         str = (COMPS_Str*)comps_doccategory_get_id(g);
#  590|           ck_assert_msg(strcmp(str->val, cats[0][x]) == 0, "%s != %s",
#  591|                         str->val, cats[0][x]);

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_arch_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:608:1: warning: warning: conversion from 'COMPS_DocEnv *' to 'COMPS_DocGroup *': incompatible pointer types
#  606|       ck_assert(list->len == 2);
#  607|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  608|->         g = (COMPS_DocEnv*)it->comps_obj;
#  609|           str = (COMPS_Str*)comps_docenv_get_id(g);
#  610|           ck_assert_msg(strcmp(str->val, envs[0][x]) == 0, "%s != %s",

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/tests/check_parse.c:608:11: warning[-Wincompatible-pointer-types]: assignment to 'COMPS_DocGroup *' from incompatible pointer type 'COMPS_DocEnv *'
#  608 |         g = (COMPS_DocEnv*)it->comps_obj;
#      |           ^
#  606|       ck_assert(list->len == 2);
#  607|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  608|->         g = (COMPS_DocEnv*)it->comps_obj;
#  609|           str = (COMPS_Str*)comps_docenv_get_id(g);
#  610|           ck_assert_msg(strcmp(str->val, envs[0][x]) == 0, "%s != %s",

Error: COMPILER_WARNING:
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: In function 'test_arch_fn'
libcomps-0.1.18/libcomps/tests/check_parse.c:609:1: warning: warning: conversion from 'COMPS_DocGroup *' to 'COMPS_DocEnv *': incompatible pointer types
#  607|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  608|           g = (COMPS_DocEnv*)it->comps_obj;
#  609|->         str = (COMPS_Str*)comps_docenv_get_id(g);
#  610|           ck_assert_msg(strcmp(str->val, envs[0][x]) == 0, "%s != %s",
#  611|                         str->val, envs[0][x]);

Error: COMPILER_WARNING (CWE-843):
libcomps-0.1.18/libcomps/tests/check_parse.c:609:47: warning[-Wincompatible-pointer-types]: passing argument 1 of 'comps_docenv_get_id' from incompatible pointer type
#  609 |         str = (COMPS_Str*)comps_docenv_get_id(g);
#      |                                               ^
#      |                                               |
#      |                                               COMPS_DocGroup *
libcomps-0.1.18/libcomps/src/comps_objradix.h:28: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_objdict.h:32: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_doc.h:24: included_from: Included from here.
libcomps-0.1.18/libcomps/tests/check_parse.c:23: included_from: Included from here.
libcomps-0.1.18/libcomps/src/comps_docenv.h:92:24: note: expected 'COMPS_DocEnv *' but argument is of type 'COMPS_DocGroup *'
#   92 | HEAD_COMPS_PROP_GETTER(env, COMPS_DocEnv, id) /*comps_utils.h macro*/
#      |                           
libcomps-0.1.18/libcomps/src/comps_utils.h:94:71: note: in definition of macro 'HEAD_COMPS_PROP_GETTER'
#   94 |                                                             (OBJTYPE *OBJNAME);
#      |                                                                       ^~~~~~~
libcomps-0.1.18/libcomps/tests/check_parse.c: scope_hint: At top level
cc1: note: unrecognized command-line option '-Wno-unknown-warning-option' may have been intended to silence earlier diagnostics
#  607|       for (it = list->first, x=0; it != NULL; it = it->next, x++) {
#  608|           g = (COMPS_DocEnv*)it->comps_obj;
#  609|->         str = (COMPS_Str*)comps_docenv_get_id(g);
#  610|           ck_assert_msg(strcmp(str->val, envs[0][x]) == 0, "%s != %s",
#  611|                         str->val, envs[0][x]);
